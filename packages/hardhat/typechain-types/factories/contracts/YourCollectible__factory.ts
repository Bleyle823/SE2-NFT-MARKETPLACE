/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  YourCollectible,
  YourCollectibleInterface,
} from "../../contracts/YourCollectible";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mintItem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336040518060400160405280600f81526020016e596f7572436f6c6c65637469626c6560881b815250604051806040016040528060038152602001622ca1a160e91b8152508160009081620000689190620001b2565b506001620000778282620001b2565b5050506001600160a01b038116620000a957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b481620000bb565b506200027e565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013857607f821691505b6020821081036200015957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001ad57600081815260208120601f850160051c81016020861015620001885750805b601f850160051c820191505b81811015620001a95782815560010162000194565b5050505b505050565b81516001600160401b03811115620001ce57620001ce6200010d565b620001e681620001df845462000123565b846200015f565b602080601f8311600181146200021e5760008415620002055750858301515b600019600386901b1c1916600185901b178555620001a9565b600085815260208120601f198616915b828110156200024f578886015182559484019460019091019084016200022e565b50858210156200026e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61186a806200028e6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b857806398bdf6f51161007c57806398bdf6f514610275578063a22cb4651461027e578063b88d4fde14610291578063c87b56dd146102a4578063e985e9c5146102b7578063f2fde38b146102ca57600080fd5b80636352211e1461022e57806370a0823114610241578063715018a6146102545780638da5cb5b1461025c57806395d89b411461026d57600080fd5b806318160ddd116100ff57806318160ddd146101da57806323b872dd146101e25780632f745c59146101f557806342842e0e146102085780634f6ccce71461021b57600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a4578063110bcd45146101b9575b600080fd5b61014f61014a3660046112e6565b6102dd565b60405190151581526020015b60405180910390f35b61016c6102ee565b60405161015b9190611353565b61018c610187366004611366565b610380565b6040516001600160a01b03909116815260200161015b565b6101b76101b236600461139b565b6103a9565b005b6101cc6101c7366004611451565b6103b8565b60405190815260200161015b565b6008546101cc565b6101b76101f03660046114b3565b6103ec565b6101cc61020336600461139b565b61047c565b6101b76102163660046114b3565b6104e1565b6101cc610229366004611366565b610501565b61018c61023c366004611366565b61055a565b6101cc61024f3660046114ef565b610565565b6101b76105ad565b600b546001600160a01b031661018c565b61016c6105c1565b6101cc600c5481565b6101b761028c36600461150a565b6105d0565b6101b761029f366004611546565b6105db565b61016c6102b2366004611366565b6105f2565b61014f6102c53660046115c2565b6105fd565b6101b76102d83660046114ef565b61062b565b60006102e882610669565b92915050565b6060600080546102fd906115f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610329906115f5565b80156103765780601f1061034b57610100808354040283529160200191610376565b820191906000526020600020905b81548152906001019060200180831161035957829003601f168201915b5050505050905090565b600061038b8261068e565b506000828152600460205260409020546001600160a01b03166102e8565b6103b48282336106c7565b5050565b600c8054600091826103c983611645565b9091555050600c546103db84826106d4565b6103e581846106ee565b9392505050565b6001600160a01b03821661041b57604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061042883833361073e565b9050836001600160a01b0316816001600160a01b031614610476576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610412565b50505050565b600061048783610565565b82106104b85760405163295f44f760e21b81526001600160a01b038416600482015260248101839052604401610412565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6104fc838383604051806020016040528060008152506105db565b505050565b600061050c60085490565b82106105355760405163295f44f760e21b81526000600482015260248101839052604401610412565b600882815481106105485761054861165e565b90600052602060002001549050919050565b60006102e88261068e565b60006001600160a01b038216610591576040516322718ad960e21b815260006004820152602401610412565b506001600160a01b031660009081526003602052604090205490565b6105b5610753565b6105bf6000610780565b565b6060600180546102fd906115f5565b6103b43383836107d2565b6105e68484846103ec565b61047684848484610871565b60606102e88261099a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610633610753565b6001600160a01b03811661065d57604051631e4fbdf760e01b815260006004820152602401610412565b61066681610780565b50565b60006001600160e01b03198216632483248360e11b14806102e857506102e882610ac0565b6000818152600260205260408120546001600160a01b0316806102e857604051637e27328960e01b815260048101849052602401610412565b6104fc8383836001610ae5565b6103b4828260405180602001604052806000815250610beb565b6000828152600a6020526040902061070682826116c2565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b600061074b848484610c02565b949350505050565b600b546001600160a01b031633146105bf5760405163118cdaa760e01b8152336004820152602401610412565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661080457604051630b61174360e31b81526001600160a01b0383166004820152602401610412565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561047657604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906108b3903390889087908790600401611782565b6020604051808303816000875af19250505080156108ee575060408051601f3d908101601f191682019092526108eb918101906117bf565b60015b610957573d80801561091c576040519150601f19603f3d011682016040523d82523d6000602084013e610921565b606091505b50805160000361094f57604051633250574960e11b81526001600160a01b0385166004820152602401610412565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461099357604051633250574960e11b81526001600160a01b0385166004820152602401610412565b5050505050565b60606109a58261068e565b506000828152600a6020526040812080546109bf906115f5565b80601f01602080910402602001604051908101604052809291908181526020018280546109eb906115f5565b8015610a385780601f10610a0d57610100808354040283529160200191610a38565b820191906000526020600020905b815481529060010190602001808311610a1b57829003601f168201915b505050505090506000610a7360408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b90508051600003610a85575092915050565b815115610ab7578082604051602001610a9f9291906117dc565b60405160208183030381529060405292505050919050565b61074b84610ccf565b60006001600160e01b0319821663780e9d6360e01b14806102e857506102e882610d60565b8080610af957506001600160a01b03821615155b15610bbb576000610b098461068e565b90506001600160a01b03831615801590610b355750826001600160a01b0316816001600160a01b031614155b8015610b485750610b4681846105fd565b155b15610b715760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610412565b8115610bb95783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610bf58383610db0565b6104fc6000848484610871565b600080610c10858585610e15565b90506001600160a01b038116610c6d57610c6884600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610c90565b846001600160a01b0316816001600160a01b031614610c9057610c908185610f0e565b6001600160a01b038516610cac57610ca784610f9f565b61074b565b846001600160a01b0316816001600160a01b03161461074b5761074b858561104e565b6060610cda8261068e565b506000610d0f60408051808201909152601581527468747470733a2f2f697066732e696f2f697066732f60581b602082015290565b90506000815111610d2f57604051806020016040528060008152506103e5565b80610d398461109e565b604051602001610d4a9291906117dc565b6040516020818303038152906040529392505050565b60006001600160e01b031982166380ac58cd60e01b1480610d9157506001600160e01b03198216635b5e139f60e01b145b806102e857506301ffc9a760e01b6001600160e01b03198316146102e8565b6001600160a01b038216610dda57604051633250574960e11b815260006004820152602401610412565b6000610de88383600061073e565b90506001600160a01b038116156104fc576040516339e3563760e11b815260006004820152602401610412565b6000828152600260205260408120546001600160a01b0390811690831615610e4257610e42818486611131565b6001600160a01b03811615610e8057610e5f600085600080610ae5565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610eaf576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000610f1983610565565b600083815260076020526040902054909150808214610f6c576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090610fb19060019061180b565b60008381526009602052604081205460088054939450909284908110610fd957610fd961165e565b906000526020600020015490508060088381548110610ffa57610ffa61165e565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806110325761103261181e565b6001900381819060005260206000200160009055905550505050565b6000600161105b84610565565b611065919061180b565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b606060006110ab83611195565b600101905060008167ffffffffffffffff8111156110cb576110cb6113c5565b6040519080825280601f01601f1916602001820160405280156110f5576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846110ff57509392505050565b61113c83838361126d565b6104fc576001600160a01b03831661116a57604051637e27328960e01b815260048101829052602401610412565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610412565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111d45772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611200576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061121e57662386f26fc10000830492506010015b6305f5e1008310611236576305f5e100830492506008015b612710831061124a57612710830492506004015b6064831061125c576064830492506002015b600a83106102e85760010192915050565b60006001600160a01b0383161580159061074b5750826001600160a01b0316846001600160a01b031614806112a757506112a784846105fd565b8061074b5750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b03198116811461066657600080fd5b6000602082840312156112f857600080fd5b81356103e5816112d0565b60005b8381101561131e578181015183820152602001611306565b50506000910152565b6000815180845261133f816020860160208601611303565b601f01601f19169290920160200192915050565b6020815260006103e56020830184611327565b60006020828403121561137857600080fd5b5035919050565b80356001600160a01b038116811461139657600080fd5b919050565b600080604083850312156113ae57600080fd5b6113b78361137f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156113f6576113f66113c5565b604051601f8501601f19908116603f0116810190828211818310171561141e5761141e6113c5565b8160405280935085815286868601111561143757600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561146457600080fd5b61146d8361137f565b9150602083013567ffffffffffffffff81111561148957600080fd5b8301601f8101851361149a57600080fd5b6114a9858235602084016113db565b9150509250929050565b6000806000606084860312156114c857600080fd5b6114d18461137f565b92506114df6020850161137f565b9150604084013590509250925092565b60006020828403121561150157600080fd5b6103e58261137f565b6000806040838503121561151d57600080fd5b6115268361137f565b91506020830135801515811461153b57600080fd5b809150509250929050565b6000806000806080858703121561155c57600080fd5b6115658561137f565b93506115736020860161137f565b925060408501359150606085013567ffffffffffffffff81111561159657600080fd5b8501601f810187136115a757600080fd5b6115b6878235602084016113db565b91505092959194509250565b600080604083850312156115d557600080fd5b6115de8361137f565b91506115ec6020840161137f565b90509250929050565b600181811c9082168061160957607f821691505b60208210810361162957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016116575761165761162f565b5060010190565b634e487b7160e01b600052603260045260246000fd5b601f8211156104fc57600081815260208120601f850160051c8101602086101561169b5750805b601f850160051c820191505b818110156116ba578281556001016116a7565b505050505050565b815167ffffffffffffffff8111156116dc576116dc6113c5565b6116f0816116ea84546115f5565b84611674565b602080601f831160018114611725576000841561170d5750858301515b600019600386901b1c1916600185901b1785556116ba565b600085815260208120601f198616915b8281101561175457888601518255948401946001909101908401611735565b50858210156117725787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117b590830184611327565b9695505050505050565b6000602082840312156117d157600080fd5b81516103e5816112d0565b600083516117ee818460208801611303565b835190830190611802818360208801611303565b01949350505050565b818103818111156102e8576102e861162f565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220a31c13fecc34968189e2dc5888c91bc2fbd5553f62e3665d2a4f0e6d35388ae664736f6c63430008140033";

type YourCollectibleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YourCollectibleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YourCollectible__factory extends ContractFactory {
  constructor(...args: YourCollectibleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      YourCollectible & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): YourCollectible__factory {
    return super.connect(runner) as YourCollectible__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YourCollectibleInterface {
    return new Interface(_abi) as YourCollectibleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): YourCollectible {
    return new Contract(address, _abi, runner) as unknown as YourCollectible;
  }
}
